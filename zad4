#4.0
file = open("liczby.txt", "r") 
lines = file.read().splitlines() 
file.close() 
for line in lines:
    print(line) 
#4.1
import math
file = open("liczby.txt", "r") 
lines = file.read().splitlines() 
count = 0 
for line in lines:
    a = int(line) 
    log = round(math.log(a, 3), 6)
    if log.is_integer(): 
        count += 1 
print("Ilosc poteg liczby 3: " + str(count))
file.close() 

#4.2
def silnia(n): 
    n = int(n)
    if n == 0: 
        return 1
    return silnia(n-1)*n
def sprawdzWarunek(s): 
    n = int(s) 
    sum = 0 
    while n > 0: 
        sum += silnia(n % 10) 
        n /= 10 
        n = int(n) 
    return sum == int(s) 
file = open("liczby.txt", "r") 
lines = file.read().splitlines() 
file.close() 
for line in lines: 
    if sprawdzWarunek(line): 
        print(line) 

#4.3
def NWD(a, b): 
    k = 1
    while b != 0:
        k = b
        b = a%b
        a = k
    return a


file = open("liczby.txt", "r") 
lines = file.read().splitlines()
pom = [] 
dzielnik = int(lines[0]) 
pierwszaMax = 0 
dlugoscMax = 0 
dzielnikMax = 1 
for i in range(1, 500):
    num = int(lines[i]) 
    nwd = NWD(dzielnik, num) 
    if nwd != 1: 
        if len(pom) == 0:
            pom.append(dzielnik) 
        pom.append(num) 
        dzielnik = nwd 
    else:
        if len(pom) > dlugoscMax:
            dlugoscMax = len(pom) 
            dzielnikMax = dzielnik 
            pierwszaMax = pom[0] 
        if len(pom) != 0: 
            if NWD(pom[len(pom)-1], num) > 1: 
                a = pom[len(pom)-1] 
                pom.clear() 
                pom.append(a) 
                pom.append(num) 
            else:
                pom.clear() 
        dzielnik = num 
print("Pierwsza liczba z ciagu: " + str(pierwszaMax) + ", dzielnik " + str(dzielnikMax) + ", dlugosc ciagu: " + str(dlugoscMax))